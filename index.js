import{i as E}from"./assets/vendor-I1I71QQ2.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const c of e)if(c.type==="childList")for(const i of c.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const c={};return e.integrity&&(c.integrity=e.integrity),e.referrerPolicy&&(c.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?c.credentials="include":e.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function n(e){if(e.ep)return;e.ep=!0;const c=s(e);fetch(e.href,c)}})();const a={searchInput:document.querySelector("#search-note"),modalBackDrop:document.querySelector(".js-modal-backdrop"),addTaskButton:document.querySelector(".js-add-task"),cancelModalBtn:document.querySelector(".js-btn-cancel"),modalWindow:document.querySelector(".js-modal-window"),modalForm:document.querySelector(".js-modal-form"),modalInput:document.querySelector(".modal-input"),taskList:document.querySelector(".js-task-list"),emptyBlock:document.querySelector(".js-empty-block"),clearListButton:document.querySelector(".js-clear-list-button"),statusSelect:document.getElementById("status"),themeButton:document.querySelector(".theme-button"),acceptModalBackdrop:document.querySelector(".js-accept-modal-backdrop"),acceptModal:document.querySelector(".js-accept-modal-window"),acceptCancelButton:document.querySelector(".js-accept-btn-cancel"),acceptClearListButton:document.querySelector(".js-accept-btn-clear")};function m(t,o){const s=JSON.stringify(o);localStorage.setItem(t,s)}function p(t){const o=localStorage.getItem(t);try{const s=JSON.parse(o);return Array.isArray(s)?s:[]}catch{return[]}}const v="task-item-key",l="task-list-key";function d(){a.emptyBlock.style.display="block"}function y(){a.emptyBlock.style.display="none"}function h(){a.clearListButton.style.display="block"}function u(){a.clearListButton.style.display="none"}function f(t){t.style.display="flex"}function b(t){t.style.display="none"}function T(){a.addTaskButton.style.display="flex"}function L(){a.addTaskButton.style.display="none"}function C(t){t.preventDefault();const o=p(l),s=t.target.value.toLowerCase(),n=document.querySelectorAll(".task-item");let e=!1;if(s===""){T(),o.length===0?(d(),u()):(y(),h(),n.forEach(c=>f(c)));return}L(),u(),n.forEach(c=>{c.querySelector(".note-title").textContent.toLowerCase().includes(s)?(f(c),e=!0):b(c)}),e?y():d()}const g="/ToDo-Manager/assets/icons.svg";function B({id:t,taskText:o,completed:s}){return`<li class="task-item" data-id="${t}">
            <div class="check-input-text-container">
                <div class="checkbox-container">
                    <input 
                        class="checkbox-input" 
                        type="checkbox" 
                        id="note-check-${t}"
                        ${s?"checked":""}
                    >
                    <label class="checkbox" for="note-check-${t}">
                        <svg class="checkbox-label-icon" width="18" height="18">
                            <use xlink:href="${g}#icon-check"></use>
                        </svg>
                    </label>
                </div>
                <div class="note-date-container">
                    <p class="note-title ${s?"completed":""}">${o}</p>
                </div>
            </div>
        
            <ul class="icon-list">
                <li class="icon-item">
                    <button class="icon-button js-edit" type="button">
                        <svg class="icon-pencil" width="15" height="15">
                            <use xlink:href="${g}#icon-pencil"></use>
                        </svg>
                    </button>
                </li>
                <li class="icon-item">
                    <button class="icon-button js-delete" type="button">
                        <svg class="icon-trash" width="18" height="18">
                            <use xlink:href="${g}#icon-trash"></use>
                        </svg>
                    </button>
                </li>
            </ul>
        </li>`}function I(t){return t.map(B).join("")}function w(t){const o={inputValue:t.currentTarget.elements["text-note"].value};m(v,o)}function S(t){let o=p(l);if(o.length)y(),h();else{d(),u();return}t.taskList.innerHTML=I(o)}function q(t,o){t.preventDefault();const s=t.target.elements["text-note"].value.trim();if(s)y(),h();else{E.warning({color:"violet",message:"Please, enter a note",position:"topRight"});return}const n=p(l)||[],e={id:Date.now(),taskText:s,completed:!1};n.push(e),m(l,n);const c=B(e);o.taskList.insertAdjacentHTML("beforeend",c),o.modalForm.reset(),o.modalBackDrop.classList.remove("is-open"),localStorage.removeItem(v)}function A(){m(l,[]),a.taskList.innerHTML="",d(),u(),S(a)}function j(t){t.target===t.currentTarget&&a.modalBackDrop.classList.remove("is-open")}function x(){a.modalBackDrop.classList.toggle("is-open"),setTimeout(()=>{a.modalInput.focus()},100)}function M(t){t.target===t.currentTarget&&a.acceptModalBackdrop.classList.remove("is-open")}function D(){a.acceptModalBackdrop.classList.remove("is-open")}function O(){a.acceptModalBackdrop.classList.toggle("is-open")}function $(){A(),a.acceptModalBackdrop.classList.remove("is-open")}function F(t){const o=t.target.closest(".icon-trash");if(!o)return;const s=o.closest(".task-item");if(!s)return;const n=Number(s.dataset.id);s.remove();let e=p(l)||[];e=e.filter(c=>c.id!==n),m(l,e),e.length===0&&(d(),u())}function N(t){if(t.target.classList.contains("checkbox-input")){const s=t.target.closest(".task-item"),n=s.querySelector(".note-title"),e=t.target.checked;n.classList.toggle("completed",e);const c=Number(s.dataset.id),i=p(l)||[],k=i.findIndex(r=>r.id===c);k!==-1&&(i[k].completed=e,m(l,i))}}function K(t){const o=t.target.closest(".icon-pencil, .note-title");if(!o)return;const s=o.closest(".task-item"),n=s.querySelector(".note-title"),e=n.textContent.trim(),c=Number(s.dataset.id);n.setAttribute("contenteditable","true"),n.classList.add("editing"),n.focus();function i(r){n.removeAttribute("contenteditable"),n.classList.remove("editing"),r.type==="keydown"&&r.key==="Escape"?n.textContent=e:P(r,n,e,c),n.removeEventListener("keydown",k),n.removeEventListener("blur",i)}function k(r){(r.key==="Enter"||r.key==="Escape")&&(r.preventDefault(),i(r))}n.addEventListener("keydown",k),n.addEventListener("blur",i)}function P(t,o,s,n){if(t.key==="Enter"||t.type==="blur"){const e=o.textContent.trim();if(o.textContent=e||s,e&&e!==s){let c=p(l);c=c.map(i=>i.id===n?{...i,taskText:e}:i),m(l,c)}}}function V(t){F(t),N(t),K(t)}function _(t){const o=t.target.value,s=document.querySelectorAll(".task-item");let n=!1;s.forEach(e=>{const i=e.querySelector(".note-title").classList.contains("completed");o==="All"||o==="Complete"&&i||o==="Incomplete"&&!i?(f(e),n=!0):b(e)}),n?(y(),o==="All"?T():L()):(d(),L()),o==="All"?h():u()}function H(){const t=document.body.classList.toggle("dark");localStorage.setItem("theme",t?"dark":"")}const J=localStorage.getItem("theme");J==="dark"&&document.body.classList.add("dark");a.searchInput.addEventListener("input",C);a.addTaskButton.addEventListener("click",x);a.cancelModalBtn.addEventListener("click",x);a.modalBackDrop.addEventListener("click",j);a.acceptModalBackdrop.addEventListener("click",M);a.acceptCancelButton.addEventListener("click",D);a.acceptClearListButton.addEventListener("click",$);a.modalForm.addEventListener("input",t=>w(t));a.modalForm.addEventListener("submit",t=>q(t,a));a.taskList.addEventListener("click",V);a.statusSelect.addEventListener("change",_);a.themeButton.addEventListener("click",H);a.clearListButton.addEventListener("click",O);S(a);
//# sourceMappingURL=index.js.map
